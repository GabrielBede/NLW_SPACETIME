* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /*Respeita os valores determinados pelo programador*/
}

:root {
  font-size: 16px; /*Usado para criar um padrão que queremos usar no projeto*/
}

::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background-color: #2c2c31;
}

::-webkit-scrollbar-thumb {
  background-color: #9e9ea0;
}

@keyframes entrering {
  /* Keyframes são usados para realizar animações por meio do css, eles podem ser usado dessa forma para algo mais detalhado: 
  
  0% {
    background-color: #ed5636;
  }
  30% {
    background-color: #633bbc;
  }

  78% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
  
  Ou então dessa forma abaixo, ambas terão o mesmo resultado
  */

  from {
    opacity: 0;
    transform: translateY(-200px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

body {
  background-color: #121215; /*Extensão: Color highlight - apresenta a cor para facilitar visualização*/
  color: #eaeaea;
  font-family: "Roboto", sans-serif;

  display: grid;
  grid-template-areas: "Profile Timeline"; /*Determina quais areas iremos usar para o projeto*/
  grid-template-columns: 1fr 1fr; /*Divide o body em duas colunas*/
  grid-template-rows: 100vh;
}

nav {
  padding: 64px;
  grid-area: Timeline; /*Determina qual area está se referindo em relação ao "grid-template-areas" do body*/
  overflow-y: scroll; /*Fixa a div nav no eixo Y, assim, apenas a timeline conseguirá realizar o scrool*/

  animation: entrering 1s ease-in-out;
}

.memory {
  display: flex; /*a div memory como elemento 'pai', faz com que seus elementos 'filhos' e apenas eles, sejam modificados*/
  flex-direction: column;
  gap: 16px; /*Determina um espaçamento 'fixo' de margin para todos os elementos*/

  text-decoration: none;
  margin-bottom: 64px;
}

.memory small {
  color: #bebebf;
  font-size: 0.75rem; /*Usamos o valor usado no inicio (12px), dividimos ele pelo padrão determinado no root e chegamos a esse valor, que é equivalente aos (16px) que determinamos no root*/
}

.memory h1 {
  color: #eaeaea;
  font-size: 2rem;
}

.memory img {
  width: 100%;
  height: 280px;
  object-fit: cover; /*Propriedade faz com que a imagem apenas estique, mas permaneça do tamanho determinado*/
  border-radius: 8px;

  transition: transform 0.3s ease-in-out;
}

.memory div {
  width: 100%;
  height: 280px;
  overflow: hidden;
  border-radius: 8px;
}

.memory:hover img {
  transform: scale(1.1);
}

.memory p {
  font-size: 1.2rem;
  color: #bebebf;
  line-height: 28px;
}

aside {
  grid-area: Profile; /*Determina qual area está se referindo em relação ao "grid-template-areas" do body*/

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 20px; /*Determina um espaçamento 'fixo' de margin para todos os elementos*/

  border-right: 1px solid;
  border-image: linear-gradient(#727275, #2c2c31) 1;

  background-image: url("./assets/background.svg");
  background-position: top right;
  background-repeat: no-repeat; /*Faz com que a image seja apenas uma, e não se repita*/
  background-size: auto 100%; /*A imagem se adapta de forma automática ao tamanho da tela*/
}

aside * {
  /*Com o uso do "*" ele vai selecionar todos os elementos que estão dentro do aside */
  animation: entrering 1s ease-in-out;
}

aside img:nth-child(2) {
  width: 160px;
  height: 160px;
  border-radius: 50%;

  border: 4px solid transparent;
  background: linear-gradient(#d39e33, #ed5636, #633bbc) padding-box,
    linear-gradient(260deg, #d39e33, #ed5636, #633bbc) border-box;
}

aside p {
  font-size: 2rem;
  text-align: center;
}

aside span {
  font-size: 0.75rem;
  color: #9e9ea0;
}

@media (max-width: 768px) {
:root {
  font-size: 14px; /*A gente determina um valor menor ao root, pois quando a tela for menor, a fonte irá se adaptar*/
}

  body {
    grid-template-columns: 1fr;
    grid-template-rows: 0.2fr 0.8fr;
    grid-template-areas:
      "Profile"
      "Timeline";
  }
  aside {
    border-right: none;
    padding: 32px 12px;
  }

  nav {
    overflow-y: visible;
    padding: 22px;
  }
}
